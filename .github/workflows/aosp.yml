name: Make Recovery

on:
  workflow_dispatch:
    inputs:
      LIBRARY_NAME:
        description: 'LIBRARY_NAME'
        required: true
        default: 'aosp'
      LIBRARY_URL:
        description: 'LIBRARY_URL'
        required: true
        default: 'https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp.git'
      LIBRARY_BRANCH:
        description: 'DEVICE_BRANCH'
        required: true
        default: 'twrp-12.1'
      DEVICE_URL:
        description: 'DEVICE_URL'
        required: true
        default: 'https://github.com/sam9306/platform_manifest_twrp_aosp'
      DEVICE_BRANCH:
        description: 'DEVICE_BRANCH'
        required: true
        default: 'twrp-12.1' 
      DEVICE_PATH:
        description: 'DEVICE_PATH'
        required: true
        default: 'device/xiaomi/nabu
      DEVICE_NAME:
        description: 'DEVICE_NAME'
        required: true
        default: 'nabu'

jobs:
  build:
      
    - name: Prepare the environment
      run: |
        docker rmi `docker images -q`
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/sudo apt/sources.list.d
        sudo apt -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo apt -y autoremove --purge
        sudo apt -y autoclean
        sudo apt clean
        sudo apt update
        sudo apt -y upgrade
        sudo apt -y install git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc unzip jq bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev imagemagick libbz2-dev libssl-dev lzma ncftp bash-completion python openjdk-8-jdk qemu-user-static
      
    - name: Set variables
      run: |
        echo "::set-output name=date::$(date +%F)"
      id: var
      
    - name: Install repo
      run: |
        git clone ${{ github.event.inputs.DEVICE_URL }} -b ${{ github.event.inputs.DEVICE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}

    - name: Building
      run: |
        PATH=~/bin:$PATH
        cd ${{ steps.s93062180.outputs.s93062180 }}
        export ALLOW_MISSING_DEPENDENCIES=true
        source build/envsetup.sh
        lunch ${{ github.event.inputs.aosp }}_${{ github.event.inputs.aosp }}-eng 
        make clean
        mka adbd bootimage -j$(nproc --all)        
    
    - name: Compressed file
      run: |
        PATH=~/bin:$PATH
        cd workspace
        zip -r ./${{ github.event.inputs.nabu }}-Built.zip ./out/target/product/${{ github.event.inputs.nabu }}/*


    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        files: workspace/${{ github.event.inputs.nabu }}-Built.zip
        name: ${{ github.event.inputs.nabu }}-${{ github.run_sam9306 }}
        tag_name: ${{ github.run_sam9306 }}
        body: Boot for ${{ github.event.inputs.nabu }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
